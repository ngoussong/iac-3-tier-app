stages:
  - validate
  - plan
  - apply

variables:
  TF_VERSION: "1.6.0"
  TF_WORKDIR: "environments/dev"  # On peut surcharger par environnement

before_script:
  - apk add --no-cache curl unzip bash git openssl
  - curl -s https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip -o terraform.zip
  - unzip terraform.zip && mv terraform /usr/bin/terraform
  - terraform --version
  - cd $TF_WORKDIR

validate:
  stage: validate
  script:
    - terraform init -backend-config="bucket=$TF_BUCKET" -backend-config="key=$CI_ENVIRONMENT_NAME/terraform.tfstate" -backend-config="region=$AWS_REGION" -backend-config="dynamodb_table=$TF_DYNAMODB"
    - terraform validate
  only:
    - merge_requests
    - main

plan:
  stage: plan
  script:
    - terraform init -backend-config="bucket=$TF_BUCKET" -backend-config="key=$CI_ENVIRONMENT_NAME/terraform.tfstate" -backend-config="region=$AWS_REGION" -backend-config="dynamodb_table=$TF_DYNAMODB"
    - terraform plan -var-file="terraform.tfvars"
  only:
    - merge_requests
    - main

apply:
  stage: apply
  script:
    - terraform init -backend-config="bucket=$TF_BUCKET" -backend-config="key=$CI_ENVIRONMENT_NAME/terraform.tfstate" -backend-config="region=$AWS_REGION" -backend-config="dynamodb_table=$TF_DYNAMODB"
    - terraform apply -auto-approve -var-file="terraform.tfvars"
  only:
    - main
    - tags
